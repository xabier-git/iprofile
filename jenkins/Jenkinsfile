pipeline {
    agent any

    environment {
        BACKEND_IMAGE = 'iprofile-backend:latest'
        FRONTEND_IMAGE = 'iprofile-frontend:latest'
        K8S_DIR = 'k8s'
    }

    stages {
        stage('Clonar código') {
            steps {
                git 'https://github.com/tu-usuario/iprofile.git'
            }
        }

        stage('Construir imágenes Docker') {
            steps {
                sh 'docker build -t $BACKEND_IMAGE iprofile-backend'
                sh 'docker build -t $FRONTEND_IMAGE iprofile-frontend'
            }
        }

        stage('Aplicar Kubernetes YAMLs') {
            steps {
                // Borra solo lo necesario
                sh '''
                kubectl delete -f $K8S_DIR/ingress.yaml --ignore-not-found
                kubectl delete -f $K8S_DIR/frontend-deployment.yaml --ignore-not-found
                kubectl delete -f $K8S_DIR/frontend-service.yaml --ignore-not-found
                kubectl delete -f $K8S_DIR/backend-deployment.yaml --ignore-not-found
                kubectl delete -f $K8S_DIR/backend-service.yaml --ignore-not-found

                kubectl apply -f $K8S_DIR/mongo-pvc.yaml
                kubectl apply -f $K8S_DIR/mongo-deployment.yaml
                kubectl apply -f $K8S_DIR/mongo-service.yaml

                kubectl apply -f $K8S_DIR/backend-deployment.yaml
                kubectl apply -f $K8S_DIR/backend-service.yaml

                kubectl apply -f $K8S_DIR/frontend-deployment.yaml
                kubectl apply -f $K8S_DIR/frontend-service.yaml

                kubectl apply -f $K8S_DIR/ingress.yaml
                '''
            }
        }
    }
}
